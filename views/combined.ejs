<!DOCTYPE html>
<html>
<head>
  <link rel="shortcut icon" href="/img/favicon_57.png"/>
  <link rel="apple-touch-icon" href="/img/favicon_57.png"/>
  <link rel="apple-touch-icon" sizes="72x72" href="/img/favicon_72.png"/>
  <link rel="apple-touch-icon" sizes="114x114" href="/img/favicon_114.png"/>
  <title>NCM & Twilio</title>
  <link rel="stylesheet" href="/css/bell.css">
  <link rel="stylesheet" href="https://unpkg.com/mobi.css/dist/mobi.min.css">
  <!-- Add plugins as you like -->
  <link rel="stylesheet" href="https://unpkg.com/mobi-plugin-color/dist/mobi-plugin-color.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
  <script type="text/javascript" src="/js/StartAudioContext.js"></script>
  <script type="text/javascript" src="/js/Tone.js"></script>
  <script type="text/javascript" src="/js/socket.io.slim.js"></script>
  <script type="text/javascript" src="/js/socket.js"></script>
  <script type="text/javascript" src="/js/tonePlayer.js"></script>
  <script type="text/javascript" src="/js/recorder.js"></script>
  


</head>
<body class="vbox viewport flex-center">
  <div class="container">
    <h1 id="log">Hello</h1>
    <a href="#" id="play" class="button">Play</a>
    <h2>All the songs..........</h2>
    <div class="flex-left units-gap">
    <label class="unit-1-3 text-right" style="width:85px;">Number of Bars: </label>
    <div class="unit-1">
      <select>
        <option>8</option>
        <option selected value>16</option>
        <option>24</option>
        <option>32</option>
        <option>64</option>
      </select>
    </div>
</body>

<script>
  const notes = <%- JSON.stringify(notes) %>;
  const genre = `<%- genre %>`;
  const audio = document.querySelector('audio');
  const beat = genre == 'HipHop' ? 'drum_beat' : 'conga_jungle';
  // 16 bars
  let bars = 16;
  const barLength = genre == 'HipHop' ? 2670 : 2400;
  const songLength = barLength * bars;
  let tapeMachine;
  let player = new TonePlayer(notes);


  Tone.Transport.bpm.value = genre == 'HipHop' ? 90 : 100;
  Tone.Transport.loop = true;
  Tone.Transport.loopStart = 0;
  Tone.Transport.loopEnd = "4m";

  const logStuff = (msg) => {
    $('#log').text(msg);
  }

  const kickOffRecording = async () => {
      tapeMachine = new Recorder(socket, Tone, songLength);
      await player.connectStream(tapeMachine.getStream());
      return tapeMachine.start();
  }

  const startSong = async () => {
    await kickOffRecording();
    Tone.Transport.start();
    player.playNote(beat);
    console.log('Starting Song!');
  }

  const resetSong = async() => {
    Tone.Transport.stop();
    player.stopNote(beat);
    await player.disconnectStream(tapeMachine.getStream())
    logStuff('RESET');
    tapeMachine.stop()
  }

  StartAudioContext(Tone.context._context, '#play').then(function(){
    //started
    logStuff('context started');
    // startSong()
  })

  $(document).ready(function () {
    setTimeout(() => {
      console.log(socket);
      socket.on('start_song', () => {
        startSong();
      })

      socket.on('await_upload', () => {
        resetSong();
      })

      socket.on('play_sound', (msg) => {
        logStuff(`${msg.note}: ${msg.action}`);
        console.log(msg);
        if (msg.action == 'stop') {
          player.stopNote(msg.note)
        } else {
          player.playNote(msg.note)
        }
      })

      $('select').on('change', function() {
        bars = this.value;
        console.log(bars);
      });

    }, 1000)
  });
</script>
</html>